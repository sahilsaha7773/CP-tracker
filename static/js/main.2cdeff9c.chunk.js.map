{"version":3,"sources":["App.js","index.js"],"names":["App","useState","ccUsername","setCCUsername","cfUsername","setCFUsername","submitted","setSubmitted","isLoading","setIsLoading","ccData","setCCData","cfData","setCFData","cfSubmissions","setCFSubmissions","cfSolvedToday","setCFSolvedToday","cfSubmissionsToday","setCFSubmissionsToday","cfTotalSolved","setCFTotalSolved","React","useMemo","data","setData","ccSubTime","setCCSubTime","cfSubTime","setCFSubTime","cfSolveTime","setCFSolveTime","setErr","useEffect","undefined","Cookies","get","getInfo","ccSolved","x","solvedTimeline","console","log","d","replaceAll","f","split","Date","push","reverse","label","slice","Math","min","length","ccSub","submissionsTimeline","cfSub","dset","Set","i","result","creationTimeSeconds","getDate","toString","getMonth","getFullYear","substr","add","refinedSub","Array","from","verdict","axes","primary","type","position","isToday","someDate","today","set","url","process","BASE_URL","fetch","then","response","json","c1","c2","c3","probTime","className","size","src","style","margin","opacity","username","rating","class","id","solvedToday","submissionsToday","submissions","fullySolved","partiallySolved","marginTop","firstName","lastName","textAlign","overflow","height","tooltip","onChange","e","target","value","placeholder","onClick","preventDefault","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cdeff9c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Chart } from 'react-charts'\nimport PacmanLoader from 'react-spinners/PacmanLoader'\nimport Cookies from 'js-cookie';\nfunction App() {\n  const [ccUsername, setCCUsername] = useState(\"\");\n  const [cfUsername, setCFUsername] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [ccData, setCCData] = useState({});\n  const [cfData, setCFData] = useState({});\n  const [cfSubmissions, setCFSubmissions] = useState({});\n  const [cfSolvedToday, setCFSolvedToday] = useState(0);\n  const [cfSubmissionsToday, setCFSubmissionsToday] = useState(0);\n  const [cfTotalSolved, setCFTotalSolved] = useState(0);\n  const [data, setData] = useState(React.useMemo(()=>[], []));\n  const [ccSubTime, setCCSubTime] = useState();\n  const [cfSubTime, setCFSubTime] = useState();\n  const [cfSolveTime, setCFSolveTime] = useState();\n  const [err, setErr] = useState(\"\");\n  useEffect(() => {\n    if(Cookies.get('cc')!=undefined && Cookies.get('cf')!=undefined) {\n      setCCUsername(Cookies.get('cc'));\n      setCFUsername(Cookies.get('cf'));\n      getInfo();\n    }\n  },[])\n\n  useEffect(() => {\n    setData(() => {\n      var ccSolved = []\n      for(let x in ccData[0]?.solvedTimeline){\n        console.log(x);\n        var d = x.replaceAll('\\\\','');\n        d = d.replaceAll('<', '');\n        var f = d.split('/');\n        console.log(f);\n        var date = new Date(f[0]+'/'+f[1]+'/20'+f[2]);\n        ccSolved.push([d, ccData[0].solvedTimeline[x]]);\n      }\n      console.log(ccData.solvedTimeline);\n      ccSolved.reverse();\n      return [{label: 'Codechef', data: ccSolved.slice(0, Math.min(ccSolved.length, 15))}];\n    })\n\n    setCCSubTime(() => {\n      var ccSub = []\n      for(let x in ccData[0]?.submissionsTimeline){\n        console.log(x);\n        var d = x.replaceAll('\\\\','');\n        d = d.replaceAll('<', '');\n        var f = d.split('/');\n        console.log(f);\n        var date = new Date(f[0]+'/'+f[1]+'/20'+f[2]);\n        ccSub.push([d, ccData[0].submissionsTimeline[x]]);\n      }\n      console.log(ccSub);\n    \n      ccSub.reverse();\n      return [{label: 'Codechef', data: ccSub.slice(0, Math.min(ccSub.length, 15))}];\n    })\n  }, [,ccData])\n\n  useEffect(() => {\n    setCFSubTime(() => {\n      var cfSub = []\n      let dset = new Set();\n\n      for(let i=0; i<cfSubmissions?.result?.length; i++){\n        var d = new Date(cfSubmissions.result[i].creationTimeSeconds * 1000);\n        console.log(cfSubmissions.result[i].creationTimeSeconds * 1000);\n        var f = d.getDate().toString() + '/' + ((d.getMonth()+1).toString().length==1 ? ('0'+(d.getMonth()+1).toString()):(d.getMonth()+1).toString()) + '/' + d.getFullYear().toString().substr(2,2);\n        dset.add(f);\n        if(f in cfSub){\n          cfSub[f]+=1;\n        }\n        else {\n          cfSub[f] = 1;\n        }\n      }\n      var refinedSub = []\n      for(var f of Array.from(dset).reverse()){\n        //var d = new Date(cfSubmissions.result[i].creationTimeSeconds * 1000);\n        console.log(f);\n        //var f = d.getDate().toString() + '/' + ((d.getMonth()+1).toString().length==1 ? ('0'+(d.getMonth()+1).toString()):(d.getMonth()+1).toString()) + '/' + d.getFullYear().toString().substr(2,2);\n        refinedSub.push([f, cfSub[f]]);\n      }\n      console.log(refinedSub);\n      refinedSub.reverse();\n      return [{label: 'Codeforces', data: refinedSub.slice(0, Math.min(refinedSub.length, 15)).reverse()}];\n    });\n\n    setCFSolveTime(() => {\n      var cfSub = []\n      let dset = new Set();\n\n      for(let i=0; i<cfSubmissions?.result?.length; i++){\n        if(cfSubmissions.result[i].verdict==='OK'){\n          var d = new Date(cfSubmissions.result[i].creationTimeSeconds * 1000);\n          console.log(cfSubmissions.result[i].creationTimeSeconds * 1000);\n          var f = d.getDate().toString() + '/' + ((d.getMonth()+1).toString().length==1 ? ('0'+(d.getMonth()+1).toString()):(d.getMonth()+1).toString()) + '/' + d.getFullYear().toString().substr(2,2);\n          dset.add(f);\n          if(f in cfSub){\n            cfSub[f]+=1;\n          }\n          else {\n            cfSub[f] = 1;\n          }\n        }\n      }\n      var refinedSub = []\n      for(var f of Array.from(dset).reverse()){\n        //var d = new Date(cfSubmissions.result[i].creationTimeSeconds * 1000);\n        console.log(f);\n        //var f = d.getDate().toString() + '/' + ((d.getMonth()+1).toString().length==1 ? ('0'+(d.getMonth()+1).toString()):(d.getMonth()+1).toString()) + '/' + d.getFullYear().toString().substr(2,2);\n        refinedSub.push([f, cfSub[f]]);\n      }\n      console.log(refinedSub);\n      refinedSub.reverse();\n      return [{label: 'Codeforces', data: refinedSub.slice(0, Math.min(refinedSub.length, 15)).reverse()}];\n    })\n  }, [,cfSubmissions])\n  // const data = React.useMemo(\n  //   () => [\n  //     {\n  //       label: 'Codechef',\n  //       data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n  //     },\n  //     {\n  //       label: 'Series 2',\n  //       data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n  //     }\n  //   ],\n  //   []\n  // )\n  const axes = React.useMemo(\n    () => [\n      { primary: true, type: 'ordinal', position: 'bottom' },\n      { type: 'linear', position: 'left' }\n    ],\n    []\n  )\n\n  const isToday = (someDate) => {\n    const today = new Date()\n    return someDate.getDate() == today.getDate() &&\n      someDate.getMonth() == today.getMonth() &&\n      someDate.getFullYear() == today.getFullYear()\n  }\n  function getInfo(){\n    if(ccUsername===\"\" || cfUsername===\"\"){\n      setErr(\"Usernames can't be empty\");\n      return;\n    }\n    Cookies.set('cc', ccUsername);\n    Cookies.set('cf', cfUsername);\n    setSubmitted(true);\n    setIsLoading(true);\n    const url = process.env.BASE_URL || 'https://cp-apis.herokuapp.com';\n    fetch(url+'/?username='+ccUsername)\n    .then(response => response.json())\n    .then(response =>{\n      console.log(response);\n      setCCData(response)\n\n      setIsLoading(false);\n    })\n    fetch('https://codeforces.com/api/user.info?handles='+cfUsername)\n    .then(response => response.json())\n    .then(response => {\n      setCFData(response);\n    })\n    fetch('https://codeforces.com/api/user.status?handle='+cfUsername)\n    .then(response => response.json())\n    .then(response => {\n      setCFSubmissions(response);\n    })\n  }\n  function handleSubmit(e){\n    if(e)\n      e.preventDefault();\n    getInfo();\n  }\n  useEffect(() => {\n    let c1 = 0, c2 = 0, c3=0;\n    for(let i=0; i<cfSubmissions?.result?.length; i++){\n      var probTime = new Date(cfSubmissions.result[i].creationTimeSeconds * 1000);\n\n      //console.log(cfSubmissions.result[i].verdict===\"OK\");\n      if(cfSubmissions.result[i].verdict===\"OK\"){\n        console.log(\"Correct\");\n        c1++;\n      }\n      if(isToday(probTime)){\n        c3+=1;\n        if(cfSubmissions.result[i].verdict===\"OK\"){\n          c2++;\n        }\n      }\n    }\n    setCFSubmissionsToday(c3);\n    setCFTotalSolved(c1);\n    setCFSolvedToday(c2);\n  }, [cfSubmissions, ])\n\n  return (\n    <div className=\"App\">\n      {\n        submitted ? \n        isLoading ? (\n          <div className=\"loader__container\">\n            <PacmanLoader size={25}/>\n            <h4 className=\"load__text\">Collecting Data . . .</h4>\n          </div>\n        ) :(\n          <div>\n            {/* <h1 style={{textAlign:'center', marginTop:'40px', color:'#42baf5'}}>CP Tracker</h1>\n            <h3 style={{textAlign:'center', color:'#42baf5'}}> (Codechef and Codeforces)</h3> */}\n            <div className=\"container\">\n              <div className=\"cc__container\">\n                <img src=\"https://cdn.codechef.com/sites/all/themes/abessive/cc-logo.png\" className=\"cc__logo\"/>\n                <h2 style={{margin: '20px', opacity: '0.5'}}>{ccData[0].username}</h2>\n                <h2 className=\"cc__rating\">{ccData[0].rating}</h2>\n                <div className=\"cc__info\">\n                  <div class=\"circular\" id=\"solveToday\">\n                    <div>\n                      <h2 className=\"circular__h2\">{ccData[0].solvedToday}</h2>\n                      <p className=\"circular__p\">Solved Today</p>\n                    </div>\n                  </div>\n                  <div class=\"circular\" id=\"submitToday\">\n                    <div>\n                      <h2 className=\"circular__h2\">{ccData[0].submissionsToday}</h2>\n                      <p className=\"circular__p\">Submissions Today</p>\n                    </div>\n                  </div>\n                  <div class=\"circular\">\n                    <div>\n                      <h2 className=\"circular__h2\">{ccData[0].submissions.length}</h2>\n                      <p className=\"circular__p\">Total Submissions</p>\n                    </div>\n                  </div>\n                  <div class=\"circular\" id=\"fullSolve\">\n                    <div>\n                      <h2 className=\"circular__h2\">{ccData[0].fullySolved}</h2>\n                      <p className=\"circular__p\">Fully Solved</p>\n                    </div>\n                  </div>\n                  <div class=\"circular\" id=\"partSolve\">\n                    <div>\n                      <h2 className=\"circular__h2\">{ccData[0].partiallySolved}</h2>\n                      <p className=\"circular__p\">Partially Solved</p>\n                    </div>\n                  </div>\n                </div>\n                \n                {/* <h2>Solved Today: {ccData[0].solvedToday}</h2>\n                <h2>Submissions Today: {ccData[0].submissionsToday}</h2>\n                <h2>Total Submissions: {ccData[0].submissions.length}</h2>\n                <h2>Fully Solved: {ccData[0].fullySolved}</h2>\n                <h2>Partially Solved: {ccData[0].partiallySolved}</h2> */}\n              </div>\n              <div className=\"cc__container\">\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b1/Codeforces_logo.svg/1200px-Codeforces_logo.svg.png\" className=\"cf__logo\"/>\n                <h2 style={{marginTop: '30px', opacity: '0.5'}}>{cfData.result[0].firstName} {cfData.result[0].lastName}</h2>\n                <h2 className=\"cf__rating\">{cfData.result[0].rating}</h2>\n                <div className=\"cc__info\">\n                  <div class=\"circular\" id=\"solveToday\">\n                    <div>\n                      <h2 className=\"circular__h2\">{cfSolvedToday}</h2>\n                      <p className=\"circular__p\">Solved Today</p>\n                    </div>\n                  </div>\n                  <div class=\"circular\" id=\"submitToday\">\n                    <div>\n                      <h2 className=\"circular__h2\">{cfSubmissionsToday}</h2>\n                      <p className=\"circular__p\">Submissions Today</p>\n                    </div>\n                  </div>\n                  <div class=\"circular\">\n                    <div>\n                      <h2 className=\"circular__h2\">{cfSubmissions.result.length}</h2>\n                      <p className=\"circular__p\">Total Submissions</p>\n                    </div>\n                  </div>\n                  <div class=\"circular\" id=\"fullSolve\">\n                    <div>\n                      <h2 className=\"circular__h2\">{cfTotalSolved}</h2>\n                      <p className=\"circular__p\">Solved</p>\n                    </div>\n                  </div>\n                </div>\n                {/* <h2>Rank: {cfData.result[0].rank}</h2>\n                <h2>Solved Today: {cfSolvedToday}</h2>\n                <h2>Submissions Today: {cfSubmissionsToday}</h2>\n                <h2>Total Submissions: {cfSubmissions.result.length}</h2>\n                <h2>Total Solved: {cfTotalSolved}</h2> */}\n              </div>  \n            </div>\n            <div className=\"graphs\">\n              <div  className=\"graph__container\">\n                <h2 style={{textAlign: 'left', opacity: '0.5'}}>CC Solved</h2>\n                <div style={{overflow: 'auto'}}>\n                  <div\n                    style={{\n                      \n                      height: '400px',\n                      margin:'40px auto'\n                    }}\n                  >\n                    <Chart data={data} axes={axes} tooltip/>\n                  </div>\n                </div>\n              </div>\n              <div  className=\"graph__container\">\n                <h2 style={{textAlign: 'left', opacity: '0.5'}}>CC Submissions</h2>\n                <div style={{overflow: 'auto'}}>\n                  <div\n                    style={{\n                      \n                      height: '400px',\n                      margin:'40px auto'\n                    }}\n                  >\n                    <Chart data={ccSubTime} axes={axes} tooltip/>\n                  </div>\n                </div>\n              </div>\n              <div  className=\"graph__container\">\n                <h2 style={{textAlign: 'left', opacity: '0.5'}}>CF Submissions</h2>\n                <div style={{overflow: 'auto'}}>\n                  <div\n                    style={{\n                      \n                      height: '450px',\n                      margin:'40px auto'\n                    }}\n                  >\n                    <Chart data={cfSubTime} axes={axes} tooltip/>\n                  </div>\n                </div>\n              </div>\n              <div  className=\"graph__container\">\n                <h2 style={{textAlign: 'left', opacity: '0.5'}}>CF Solved</h2>\n                <div style={{overflow: 'auto'}}>\n                  <div\n                    style={{\n                      \n                      height: '450px',\n                      margin:'40px auto',\n                    }}\n                  >\n                    <Chart data={cfSolveTime} axes={axes} tooltip/>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n        :(\n          <div className=\"form__container\">\n            <div className=\"form\">\n              <h2>Enter your usernames!</h2>\n              <input type=\"text\" onChange={(e)=>setCCUsername(e.target.value)} value={ccUsername} placeholder=\"Codechef Username\"/>\n              <input type=\"text\" onChange={(e)=>setCFUsername(e.target.value)} value={cfUsername} placeholder=\"Codeforces Username\"/>\n              <button onClick={handleSubmit} type=\"submit\" id=\"submit\">Let's Go</button>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}